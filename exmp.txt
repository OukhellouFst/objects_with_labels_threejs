----------------------------------------------------
------------exp 1 ----------------------------------

    // create geometry 
    const geometry = new BoxGeometry( 2,2,2 );
    // Switch the old "basic" material to
    // a physically correct "standard" material
    const material = new MeshStandardMaterial({color: 'purple'});
    // create a Mesh containing the geometry and material 
    const cube = new Mesh(geometry,material);
    cube.rotation.set(-0.5,-0.1,0.8);
    cube.scale.set(0.5,0.5,0.5);

    const radiansPerSecond = MathUtils.degToRad(30);
    // this method will be called once per frame
    cube.tick = (delta) => {
        // increase the cube's rotation each frame
        cube.rotation.z += radiansPerSecond*delta;
        cube.rotation.x += radiansPerSecond*delta;
        cube.rotation.y += radiansPerSecond*delta;
    };

    return cube ;


----------------------------------------------------------
------------exp 2 -----------------------------------------

import { CylinderBufferGeometry, Mesh , MeshBasicMaterial, MathUtils } from "../../../../node_modules/three/build/three.module.js";

class Cylinder() {
    objet=null;
    constructor() {
        this.objet = new Mesh(new CylinderBufferGeometry(0.2,0.2,1,16),MeshBasicMaterial({color:'Crimson'}));
        this.objet.position.set(0,0,1/2);
        this.objet.rotation.x += MathUtils.degToRad(90);
    }

    function poistionnement(x,y,z) {
        this.objet.position.set (x,y,1/2);
    }

    // mouvement ( this method will be called once by frame) 
    function mouvement(delta) {
        this.objet.tick = (delta) => {
            cylinder.position.x +=0.0099;
        };
    }
}
export { createCylinder };